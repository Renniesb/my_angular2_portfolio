{"version":3,"file":"app.bundle.js","sources":["webpack:///src/app.ts","webpack:///src/app/my-app.ts","webpack:///src/app/components/suggestions/suggestions.component.ts","webpack:///src/app/services/suggestion.ts","webpack:///src/app/services/suggestion.service.ts","webpack:///src/app/services/mock-suggestions.ts","webpack:///src/app/components/projects/projects.component.ts","webpack:///src/app/services/tech.service.ts","webpack:///src/app/services/mock-tech.ts","webpack:///src/app/services/project.service.ts","webpack:///src/app/services/mock-projects.ts","webpack:///src/app/services/project.ts"],"sourcesContent":["import {LocationStrategy, HashLocationStrategy} from '@angular/common';\r\nimport {bootstrap} from '@angular/platform-browser-dynamic';\r\nimport {provide, enableProdMode} from '@angular/core';\r\nimport {HTTP_PROVIDERS} from '@angular/http';\r\nimport {ROUTER_PROVIDERS} from '@angular/router-deprecated';\r\n\r\nimport {AppComponent} from './app/my-app';\r\n\r\n\r\n// enableProdMode()\r\n\r\nbootstrap(AppComponent, [\r\n  HTTP_PROVIDERS,\r\n  ROUTER_PROVIDERS,\r\n  provide(LocationStrategy, {useClass: HashLocationStrategy})\r\n])\r\n.catch(err => console.error(err));\r\n\n\n\n/** WEBPACK FOOTER **\n ** src/app.ts\n **/","import {Component, OnInit} from '@angular/core';\r\nimport {Router, RouteConfig, ROUTER_DIRECTIVES, ROUTER_PROVIDERS} from '@angular/router-deprecated';\r\n\r\nimport {SuggestionsView } from './components/suggestions/suggestions.component';\r\nimport { ProjectsComponent }     from './components/projects/projects.component';\r\n\r\n\r\n@Component({\r\n  selector: 'my-app',\r\n  providers: [ROUTER_PROVIDERS],\r\n  pipes: [],\r\n  directives: [ROUTER_DIRECTIVES],\r\n  templateUrl: 'app/my-app.html',\r\n  styleUrls:['app/my-app.css']\r\n})\r\n@RouteConfig([\r\n  { path: '/projects',       component: ProjectsComponent,        name: 'Projects', useAsDefault: true },\r\n  { path: '/suggestions',      component: SuggestionsView,       name: 'Suggestions' },\r\n])\r\nexport class AppComponent {\r\n\r\n  constructor() {}\r\n\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** src/app/my-app.ts\n **/","import { ROUTER_DIRECTIVES, Routes } from '@angular/router';\r\nimport { Component, OnInit }   from '@angular/core';\r\nimport { Suggestion }   from '../../services/suggestion';\r\nimport { SuggestionService } from '../../services/suggestion.service';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'suggestion-posts',\r\n  inputs: ['suggestion'],\r\n  host: {\r\n    class: 'row'\r\n  },\r\n  template: `\r\n    <div class=\"\">\r\n      <div class=\"\">\r\n        <div class=\"\">\r\n          {{ suggestion.votes }}\r\n        </div>\r\n        <div class=\"\">\r\n          Points\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"\">\r\n      <a class=\"\">\r\n        {{ suggestion.title }}\r\n      </a>\r\n      <div class=\"\">{{ suggestion.comment}}</div>\r\n      <ul class=\"\">\r\n        <li class=\"\">\r\n          <a href (click)=\"voteUp()\">\r\n            <i class=\"\"></i>\r\n              upvote\r\n            </a>\r\n        </li>\r\n        <li class=\"\">\r\n          <a href (click)=\"voteDown()\">\r\n            <i class=\"arrow down icon\"></i>\r\n            downvote\r\n          </a>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  `\r\n})\r\nexport class SuggestionsComponent {\r\n  suggestion: Suggestion;\r\n\r\n  voteUp(): boolean {\r\n    this.suggestion.voteUp();\r\n    return false;\r\n  }\r\n\r\n  voteDown(): boolean {\r\n    this.suggestion.voteDown();\r\n    return false;\r\n  }\r\n}\r\n\r\n@Component({\r\n\r\n   directives: [SuggestionsComponent],\r\n  template: `\r\n    <form class=\"Container\">\r\n      <h3 class=\"\">Add a Project Suggestion</h3>\r\n\r\n      <div class=\"row\">\r\n        <div class=\"col-md-6\">\r\n          <label for=\"title\">Suggested Project Title:</label>\r\n          <input name=\"title\" #newtitle>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-md-6\">\r\n          <label for=\"comment\">Suggested Project Idea</label>\r\n          <textarea name=\"comment\" #newcomment style=\"width:100%; height=100px\"></textarea>\r\n        </div>\r\n      </div>\r\n\r\n      <button (click)=\"addSuggestion(newtitle, newcomment)\"\r\n              class=\"\">\r\n        Submit suggestion\r\n      </button>\r\n    </form>\r\n\r\n    <div class=\"\">\r\n      <suggestion-posts\r\n        *ngFor=\"let suggestion of sortedSuggestions()\"\r\n        [suggestion]=\"suggestion\">\r\n      </suggestion-posts>\r\n    </div>\r\n  `, providers: [SuggestionService]\r\n\r\n})\r\nexport class SuggestionsView implements OnInit {\r\n  suggestions: Suggestion[];\r\n\r\n  constructor(private suggestionService: SuggestionService) { }\r\n\r\n  getSuggestions(){\r\n    this.suggestions = this.suggestionService.getSuggestions();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getSuggestions();\r\n  }\r\n\r\n  addSuggestion(title: HTMLInputElement, comment: HTMLInputElement): void {\r\n    console.log(`Adding suggestion title: ${title.value} and comment: ${comment.value}`);\r\n    this.suggestions.push(new Suggestion(title.value, comment.value, 0));\r\n    title.value = '';\r\n    comment.value = '';\r\n  }\r\n\r\n  sortedSuggestions(): Suggestion[] {\r\n    return this.suggestions.sort((a: Suggestion, b: Suggestion) => b.votes - a.votes);\r\n  }\r\n\r\n}\n\n\n/** WEBPACK FOOTER **\n ** src/app/components/suggestions/suggestions.component.ts\n **/","export class Suggestion {\r\n  title: string;\r\n  comment: string;\r\n  votes: number;\r\n\r\n  constructor(title: string, comment: string, votes?: number) {\r\n    this.title = title;\r\n    this.comment = comment;\r\n    this.votes = votes || 0;\r\n  }\r\n\r\n  voteUp(): void {\r\n    this.votes += 1;\r\n  }\r\n\r\n  voteDown(): void {\r\n    this.votes -= 1;\r\n  }\r\n}\n\n\n/** WEBPACK FOOTER **\n ** src/app/services/suggestion.ts\n **/","import { Injectable } from '@angular/core';\r\nimport { SUGGESTIONS } from './mock-suggestions';\r\n\r\n@Injectable()\r\nexport class SuggestionService {\r\n  getSuggestions() {\r\n    return SUGGESTIONS;\r\n  }\r\n}\n\n\n/** WEBPACK FOOTER **\n ** src/app/services/suggestion.service.ts\n **/","import { Suggestion } from './suggestion';\r\nexport var SUGGESTIONS: Suggestion[] = [\r\n      new Suggestion('Angular 2', 'http://angular.io', 3),\r\n      new Suggestion('Fullstack', 'http://fullstack.io', 2),\r\n      new Suggestion('Angular Homepage', 'http://angular.io', 1)\r\n];\r\n\n\n\n/** WEBPACK FOOTER **\n ** src/app/services/mock-suggestions.ts\n **/","\r\nimport { ROUTER_DIRECTIVES, Routes } from '@angular/router';\r\nimport { Component,  OnInit }       from '@angular/core';\r\nimport { Project }   from '../../services/project';\r\nimport { TechService } from '../../services/tech.service';\r\nimport {ProjectService} from '../../services/project.service';\r\n\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'my-app',\r\n  host: {class: 'dashboard'},\r\n  templateUrl: 'app/components/projects/projects.component.html',\r\n  providers: [ProjectService, TechService]\r\n\r\n})\r\n\r\n\r\n\r\nexport class ProjectsComponent implements OnInit {\r\n\r\n  technologyList : Array<any>;\r\n  allProjects: Project[];\r\n  title: string = 'Filter Projects by Technology';\r\n\r\n\r\n  constructor(private projectService: ProjectService, private techService: TechService ) {}\r\n\r\n   ngOnInit(){\r\n    this.getTech();\r\n    this.getProjects();\r\n    this.updateSelectedList();\r\n  }\r\n\r\n  getProjects(){\r\n    this.allProjects = this.projectService.getProjects();\r\n  }\r\n\r\n  getTech(){\r\n\r\n    this.technologyList = this.techService.getTech();\r\n  }\r\n\r\n  /* projects that match the selected tech */\r\n  matchedProjects: Array<any> = []\r\n\r\n  /* The checked items in the list */\r\n  selectedTechnology: Array<string> = [];\r\n\r\n  favUp(project): boolean {\r\n          project.favUp();\r\n          return false;\r\n  }\r\n\r\n  onInteractionEvent(event: Event) {\r\n    var item = this.technologyList.find(\r\n      (val) => val.name === event.target.value\r\n    );\r\n\r\n    item.checked = !item.checked;\r\n    this.updateSelectedList();\r\n  }\r\n\r\n  updateSelectedList() {\r\n    let checkedNames =\r\n        this.technologyList.filter( (val) => val.checked === true).map(n => n.name);\r\n\r\n\r\n    this.matchedProjects = this.allProjects.filter(project => {\r\n        return this.containsAny(project.technologies, checkedNames)\r\n    });\r\n\r\n\r\n  }\r\n\r\n\r\n  containsAny(arr1, arr2) {\r\n    for(var i in arr1) {\r\n        if(arr2.indexOf( arr1[i] ) > -1){\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n};\r\n\r\n\r\n\r\n}\n\n\n/** WEBPACK FOOTER **\n ** src/app/components/projects/projects.component.ts\n **/","import { Injectable } from '@angular/core';\r\nimport { MOCKTECH } from './mock-tech';\r\n\r\n@Injectable()\r\nexport class TechService {\r\n  getTech() {\r\n    return MOCKTECH;\r\n  }\r\n}\n\n\n/** WEBPACK FOOTER **\n ** src/app/services/tech.service.ts\n **/","/* all possible tech */\r\nexport var MOCKTECH = [\r\n    { \r\n      name:\"Javascript\",\r\n      checked: true\r\n    }, {\r\n      name: \"PHP\",\r\n      checked: true\r\n    }, {\r\n      name: \"HTML5\",\r\n      checked: true\r\n    }, {\r\n      name: \"CSS3\",\r\n      checked: true\r\n    }, {\r\n      name: \"AngularJS\",\r\n      checked: true\r\n    }, {\r\n      name: \"BackboneJS\",\r\n      checked: true\r\n    }, {\r\n      name: \"KnockoutJS\",\r\n      checked: true\r\n    }, {\r\n      name: \"Bootstrap\",\r\n      checked: true\r\n    }, {\r\n      name: \"Wordpress\",\r\n      checked: true\r\n    },\r\n    {\r\n      name: \"Photoshop\",\r\n      checked: true\r\n    }\r\n  ];\n\n\n/** WEBPACK FOOTER **\n ** src/app/services/mock-tech.ts\n **/","import { Injectable } from '@angular/core';\r\nimport { MOCKPROJECTS } from './mock-projects';\r\n\r\n@Injectable()\r\nexport class ProjectService {\r\n  getProjects() {\r\n    return MOCKPROJECTS;\r\n  }\r\n}\n\n\n/** WEBPACK FOOTER **\n ** src/app/services/project.service.ts\n **/","\r\nimport { Project } from './project';\r\n\r\n /* all the projects worked on */\r\nexport var MOCKPROJECTS = [\r\n          new Project( \"Web Design Business Website\", [\"Wordpress\", \"Bootstrap\",\"PHP\",\"HTML5\",\"CSS3\"], 0 ),\r\n          new Project( \"Vocab Immersion Trainer App\", [\"AngularJS\",\"Javascript\",\"Bootstrap\",\"HTML5\",\"CSS3\"], 0)\r\n        ];\r\n\n\n\n/** WEBPACK FOOTER **\n ** src/app/services/mock-projects.ts\n **/","export class Project {\r\n  name: string;\r\n  technologies: Array<any>;\r\n  favs: number;\r\n\r\n  constructor(name: string, technologies: Array<any>, favs: number) {\r\n    this.name = name;\r\n    this.technologies = technologies;\r\n    this.favs = favs || 0;\r\n  }\r\n\r\n  favUp(): void {\r\n    this.favs += 1;\r\n  }\r\n\r\n}\n\n\n/** WEBPACK FOOTER **\n ** src/app/services/project.ts\n **/"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AChBA;AACA;AAEA;AACA;AAeA;AAEA;AAAA;AAdA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAAA;AAKA;AAAA;AAJA;;;;;;;;;;;;;;;;;;AClBA;AACA;AACA;AA2CA;AAAA;AAYA;AATA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAlDA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAgCA;;AAAA;AAaA;AAAA;AAZA;AAiDA;AAGA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAzDA;AAAA;AAEA;AACA;AA+BA;;AAAA;AAyBA;AAAA;AAxBA;;;;;;;;;AC/FA;AAKA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAlBA;;;;;;;;;;;;;;;;;;ACAA;AACA;AAGA;AAAA;AAIA;AAHA;AACA;AACA;AAJA;AAAA;;AAAA;AAKA;AAAA;AAJA;;;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACHA;AAEA;AACA;AAeA;AAOA;AAAA;AAAA;AAHA;AAoBA;AACA;AAEA;AACA;AArBA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAQA;AACA;AACA;AACA;AAEA;AACA;AAIA;AACA;AACA;AAEA;AAAA;AACA;AAIA;AACA;AACA;AAGA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AA1EA;AAAA;AACA;AACA;AACA;AACA;AAEA;;AAAA;AAwEA;AAAA;AApEA;;;;;;;;;;;;;;;;;;ACpBA;AACA;AAGA;AAAA;AAIA;AAHA;AACA;AACA;AAJA;AAAA;;AAAA;AAKA;AAAA;AAJA;;;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AClCA;AACA;AAGA;AAAA;AAIA;AAHA;AACA;AACA;AAJA;AAAA;;AAAA;AAKA;AAAA;AAJA;;;;;;;;;ACHA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;ACPA;AAKA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AAfA;;;;;","sourceRoot":""}